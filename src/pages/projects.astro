---
import Image from 'astro/components/Image.astro'
import { getCollection } from 'astro:content'
import DashboardGallery from '../components/DashboardGallery.tsx'
import BaseLayout from '../layouts/BaseLayout.astro'

interface DashboardProject {
  title: string
  description: string
  tools: string[]
  images: string[]
}



const projects = await getCollection('projects')
const allApps = projects.map((project) => project.data.apps).flat()

const nonCRMProjects = allApps.filter(app => !app.isCRM).sort((a: any, b: any) => b.isLive - a.isLive)


// Transformar las imÃ¡genes de objetos a strings
const crmProjects = allApps
  .filter(app => app.isCRM)
  .map(project => ({
    title: project.title,
    description: project.description,
    tools: project.tools,
    images: project.images?.map(img =>
      typeof img === 'string' ? img : img.src
    )
  })) as DashboardProject[]
---

<BaseLayout
  title="My Projects & Portfolio"
  description="Collection of projects built with Next.js, React, and PayloadCMS. View my work including SoyMenu and other full-stack applications."
>
  <main class="text-center flex flex-col gap-16 mx-auto max-w-7xl px-4 py-8">
    <header class="space-y-4">
      <span
        class="px-6 py-2 bg-gray-800/80 border border-gray-700 rounded-full text-sm inline-block w-fit mx-auto text-gray-300"
      >
        Projects
      </span>
      <h1 class="text-3xl md:text-4xl font-bold text-white">Some of my work</h1>
      <p class="text-gray-400 max-w-2xl mx-auto">
        A collection of projects I've built, showcasing different technologies and approaches.
      </p>
    </header>

    <!-- Live Projects Section -->
    <section class="space-y-8">
      <div class="flex items-center gap-4">
        <div class="h-px bg-gradient-to-r from-transparent via-gray-700 to-transparent flex-1"></div>
        <h2 class="text-2xl font-bold text-white flex items-center gap-2">
          <svg class="w-6 h-6 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
          </svg>
          Live Projects
        </h2>
        <div class="h-px bg-gradient-to-r from-transparent via-gray-700 to-transparent flex-1"></div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {
          nonCRMProjects.map((app) => (
            <article class="group">
              <a
                href={app?.link}
                target="_blank"
                rel="noopener noreferrer"
                aria-label={`View ${app?.title || 'project'} - ${app?.description}`}
                class="block relative border border-gray-800 rounded-xl p-8 hover:border-gray-700 transition-all duration-300 bg-gray-900/50 hover:bg-gray-900/70"
              >
                <div class="relative bg-gray-800 rounded-lg overflow-hidden mb-6 aspect-video">
                {app?.image && <Image
                    src={app?.image}
                    alt={`${app?.title || 'Project'} screenshot`}
                    class="opacity-50 group-hover:opacity-80 w-full h-full object-cover transition-all duration-500 group-hover:scale-105"
                    loading="lazy"
                    style={{

                      filter: app.isLive ? 'none' : 'grayscale(100%)',
                    }}
                  /> }
                  <div class="absolute inset-0 bg-gradient-to-t from-gray-900/80 via-transparent to-transparent" />

                  <!-- Live indicator -->
                  { app.isLive ? (
                  <div class="absolute top-3 right-3 flex items-center gap-1 bg-green-500/20 border border-green-500/30 rounded-full px-2 py-1">
                    <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                    <span class="text-xs text-green-400 font-medium">Live</span>
                  </div>
                  ) :
                  <div class="absolute top-3 right-3 flex items-center gap-1 bg-red-500/20 border border-red-500/30 rounded-full px-2 py-1">
                    <div class="w-2 h-2 bg-red-500 rounded-full animate-pulse"></div>
                    <span class="text-xs text-red-400 font-medium">Not Live</span>
                  </div>
                  }
                </div>

                <div class="space-y-3">
                  <h3 class="text-xl md:text-2xl font-bold text-white group-hover:text-gray-100 transition-colors">
                    {app?.title}
                  </h3>
                  <p class="text-gray-400 group-hover:text-gray-300 leading-relaxed transition-colors">
                    {app?.description}
                  </p>

                  <div class="flex items-center gap-2 text-sm text-gray-500 group-hover:text-gray-400 transition-colors pt-2">
                    <span>View project</span>
                    <svg
                      class="w-4 h-4 transform group-hover:translate-x-1 transition-transform"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                      aria-hidden="true"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                      />
                    </svg>
                  </div>
                </div>

                <div class="absolute inset-0 rounded-xl ring-1 ring-gray-700 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none" />
              </a>
            </article>
          ))
        }
      </div>
    </section>

    <!-- Dashboard Section with React Component -->
<DashboardGallery projects={crmProjects} client:load />
  </main>
</BaseLayout>