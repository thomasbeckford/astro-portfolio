---
import { Image } from 'astro:assets'
import { getCollection } from 'astro:content'
const technologies = await getCollection('technologies')
const firstTechnologies = technologies[0]
const firstHalf = firstTechnologies?.data.data.slice(
  0,
  Math.floor(firstTechnologies?.data.data.length / 2),
)
const secondHalf = firstTechnologies?.data.data.slice(
  Math.floor(firstTechnologies?.data.data.length / 2),
)
---

<div
  class={`marquee fadeout-horizontal `}
  style={{ '--num-items': firstHalf.length }}
>
  <div class="marquee-track">
    {
      firstHalf.map((technology, index) => (
        <div class="marquee-item" style={{ '--item-position': index }}>
          <Image
            src={technology.icon}
            alt={technology.title}
            width={60}
            height={60}
          />
        </div>
      ))
    }
  </div>
</div>

<div
  class="marquee fadeout-horizontal [--direction:reverse]"
  style={{ '--num-items': secondHalf.length }}
>
  <div class="marquee-track">
    {
      secondHalf.map((technology, index) => (
        <div class="marquee-item" style={{ '--item-position': index }}>
          <Image
            src={technology.icon}
            alt={technology.title}
            width={60}
            height={60}
          />
        </div>
      ))
    }
  </div>
</div>

<style>
  .marquee {
    max-width: 1800px;
    overflow: hidden;
    --speed: 25s;
    --item-width: 100px;
    --item-gap: 25px;
    --single-slide-speed: calc(var(--speed) / var(--num-items));
    --item-width-plus-gap: calc(var(--item-width) + var(--item-gap));
    --track-width: calc(
      var(--item-width-plus-gap) * calc(var(--num-items) - 1)
    );
  }

  .marquee-track {
    container-type: inline-size;
    display: grid;
    grid-template-columns: var(--track-width) [track] 0px [resting];
    width: max-content;
  }

  .marquee-item {
    width: var(--item-width);
    aspect-ratio: 1/1.2;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 1rem;
    background-color: rgba(255, 255, 255, 0.1);
    color: #fff;
    grid-area: resting;
    animation: marquee-move var(--speed) linear infinite
      var(--direction, forwards);
    animation-delay: calc(
      var(--single-slide-speed) * var(--item-position) * -1
    );
  }

  .marquee-item img {
    height: auto;
    width: 80%;
  }

  .fadeout-horizontal {
    mask-image: linear-gradient(
      to right,
      transparent,
      black 15rem,
      black calc(100% - 15rem),
      transparent
    );
  }

  @keyframes marquee-move {
    to {
      transform: translateX(calc(-100cqw - 100%));
    }
  }

  @keyframes marque-move-text {
    to {
      transform: translateX(-50%);
    }
  }
</style>
